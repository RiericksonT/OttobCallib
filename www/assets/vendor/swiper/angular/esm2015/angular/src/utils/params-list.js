/* underscore in name -> watch for changes */
export const paramsList = [
    'init',
    'enabled',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_rewind',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    // modules
    'a11y',
    'autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
    'on',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYW1zLWxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYW5ndWxhci9zcmMvdXRpbHMvcGFyYW1zLWxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN4QixNQUFNO0lBQ04sU0FBUztJQUNULFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLFFBQVE7SUFDUixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixRQUFRO0lBQ1IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLFdBQVc7SUFDWCxLQUFLO0lBQ0wscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLE9BQU87SUFDUCxpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLGlCQUFpQjtJQUNqQix1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLG9CQUFvQjtJQUNwQixxQkFBcUI7SUFDckIsMkJBQTJCO0lBQzNCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QsWUFBWTtJQUNaLFlBQVk7SUFDWixlQUFlO0lBQ2YsY0FBYztJQUNkLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsY0FBYztJQUNkLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLDBCQUEwQjtJQUMxQiwwQkFBMEI7SUFDMUIsK0JBQStCO0lBQy9CLHFCQUFxQjtJQUNyQixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQixzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLGVBQWU7SUFDZiwwQkFBMEI7SUFDMUIsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixxQkFBcUI7SUFDckIsT0FBTztJQUNQLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2YseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLHdCQUF3QjtJQUN4QixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQiwyQkFBMkI7SUFDM0IsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsY0FBYztJQUNkLG9CQUFvQjtJQUNwQixVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUV0QixVQUFVO0lBQ1YsTUFBTTtJQUNOLFVBQVU7SUFDVixhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsTUFBTTtJQUNOLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULFNBQVM7SUFDVCxNQUFNO0lBQ04sSUFBSTtDQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB1bmRlcnNjb3JlIGluIG5hbWUgLT4gd2F0Y2ggZm9yIGNoYW5nZXMgKi9cbmV4cG9ydCBjb25zdCBwYXJhbXNMaXN0ID0gW1xuICAnaW5pdCcsXG4gICdlbmFibGVkJyxcbiAgJ19kaXJlY3Rpb24nLFxuICAndG91Y2hFdmVudHNUYXJnZXQnLFxuICAnaW5pdGlhbFNsaWRlJyxcbiAgJ19zcGVlZCcsXG4gICdjc3NNb2RlJyxcbiAgJ3VwZGF0ZU9uV2luZG93UmVzaXplJyxcbiAgJ3Jlc2l6ZU9ic2VydmVyJyxcbiAgJ25lc3RlZCcsXG4gICdmb2N1c2FibGVFbGVtZW50cycsXG4gICdfd2lkdGgnLFxuICAnX2hlaWdodCcsXG4gICdwcmV2ZW50SW50ZXJhY3Rpb25PblRyYW5zaXRpb24nLFxuICAndXNlckFnZW50JyxcbiAgJ3VybCcsXG4gICdfZWRnZVN3aXBlRGV0ZWN0aW9uJyxcbiAgJ19lZGdlU3dpcGVUaHJlc2hvbGQnLFxuICAnX2ZyZWVNb2RlJyxcbiAgJ19hdXRvSGVpZ2h0JyxcbiAgJ3NldFdyYXBwZXJTaXplJyxcbiAgJ3ZpcnR1YWxUcmFuc2xhdGUnLFxuICAnX2VmZmVjdCcsXG4gICdicmVha3BvaW50cycsXG4gICdfc3BhY2VCZXR3ZWVuJyxcbiAgJ19zbGlkZXNQZXJWaWV3JyxcbiAgJ19ncmlkJyxcbiAgJ19zbGlkZXNQZXJHcm91cCcsXG4gICdfc2xpZGVzUGVyR3JvdXBTa2lwJyxcbiAgJ19jZW50ZXJlZFNsaWRlcycsXG4gICdfY2VudGVyZWRTbGlkZXNCb3VuZHMnLFxuICAnX3NsaWRlc09mZnNldEJlZm9yZScsXG4gICdfc2xpZGVzT2Zmc2V0QWZ0ZXInLFxuICAnbm9ybWFsaXplU2xpZGVJbmRleCcsXG4gICdfY2VudGVySW5zdWZmaWNpZW50U2xpZGVzJyxcbiAgJ193YXRjaE92ZXJmbG93JyxcbiAgJ3JvdW5kTGVuZ3RocycsXG4gICd0b3VjaFJhdGlvJyxcbiAgJ3RvdWNoQW5nbGUnLFxuICAnc2ltdWxhdGVUb3VjaCcsXG4gICdfc2hvcnRTd2lwZXMnLFxuICAnX2xvbmdTd2lwZXMnLFxuICAnbG9uZ1N3aXBlc1JhdGlvJyxcbiAgJ2xvbmdTd2lwZXNNcycsXG4gICdfZm9sbG93RmluZ2VyJyxcbiAgJ2FsbG93VG91Y2hNb3ZlJyxcbiAgJ190aHJlc2hvbGQnLFxuICAndG91Y2hNb3ZlU3RvcFByb3BhZ2F0aW9uJyxcbiAgJ3RvdWNoU3RhcnRQcmV2ZW50RGVmYXVsdCcsXG4gICd0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdCcsXG4gICd0b3VjaFJlbGVhc2VPbkVkZ2VzJyxcbiAgJ3VuaXF1ZU5hdkVsZW1lbnRzJyxcbiAgJ19yZXNpc3RhbmNlJyxcbiAgJ19yZXNpc3RhbmNlUmF0aW8nLFxuICAnX3dhdGNoU2xpZGVzUHJvZ3Jlc3MnLFxuICAnX2dyYWJDdXJzb3InLFxuICAncHJldmVudENsaWNrcycsXG4gICdwcmV2ZW50Q2xpY2tzUHJvcGFnYXRpb24nLFxuICAnX3NsaWRlVG9DbGlja2VkU2xpZGUnLFxuICAnX3ByZWxvYWRJbWFnZXMnLFxuICAndXBkYXRlT25JbWFnZXNSZWFkeScsXG4gICdfbG9vcCcsXG4gICdfbG9vcEFkZGl0aW9uYWxTbGlkZXMnLFxuICAnX2xvb3BlZFNsaWRlcycsXG4gICdfbG9vcEZpbGxHcm91cFdpdGhCbGFuaycsXG4gICdsb29wUHJldmVudHNTbGlkZScsXG4gICdfcmV3aW5kJyxcbiAgJ19hbGxvd1NsaWRlUHJldicsXG4gICdfYWxsb3dTbGlkZU5leHQnLFxuICAnX3N3aXBlSGFuZGxlcicsXG4gICdfbm9Td2lwaW5nJyxcbiAgJ25vU3dpcGluZ0NsYXNzJyxcbiAgJ25vU3dpcGluZ1NlbGVjdG9yJyxcbiAgJ3Bhc3NpdmVMaXN0ZW5lcnMnLFxuICAnY29udGFpbmVyTW9kaWZpZXJDbGFzcycsXG4gICdzbGlkZUNsYXNzJyxcbiAgJ3NsaWRlQmxhbmtDbGFzcycsXG4gICdzbGlkZUFjdGl2ZUNsYXNzJyxcbiAgJ3NsaWRlRHVwbGljYXRlQWN0aXZlQ2xhc3MnLFxuICAnc2xpZGVWaXNpYmxlQ2xhc3MnLFxuICAnc2xpZGVEdXBsaWNhdGVDbGFzcycsXG4gICdzbGlkZU5leHRDbGFzcycsXG4gICdzbGlkZUR1cGxpY2F0ZU5leHRDbGFzcycsXG4gICdzbGlkZVByZXZDbGFzcycsXG4gICdzbGlkZUR1cGxpY2F0ZVByZXZDbGFzcycsXG4gICd3cmFwcGVyQ2xhc3MnLFxuICAncnVuQ2FsbGJhY2tzT25Jbml0JyxcbiAgJ29ic2VydmVyJyxcbiAgJ29ic2VydmVQYXJlbnRzJyxcbiAgJ29ic2VydmVTbGlkZUNoaWxkcmVuJyxcblxuICAvLyBtb2R1bGVzXG4gICdhMTF5JyxcbiAgJ2F1dG9wbGF5JyxcbiAgJ19jb250cm9sbGVyJyxcbiAgJ2NvdmVyZmxvd0VmZmVjdCcsXG4gICdjdWJlRWZmZWN0JyxcbiAgJ2ZhZGVFZmZlY3QnLFxuICAnZmxpcEVmZmVjdCcsXG4gICdjcmVhdGl2ZUVmZmVjdCcsXG4gICdjYXJkc0VmZmVjdCcsXG4gICdoYXNoTmF2aWdhdGlvbicsXG4gICdoaXN0b3J5JyxcbiAgJ2tleWJvYXJkJyxcbiAgJ2xhenknLFxuICAnbW91c2V3aGVlbCcsXG4gICdfbmF2aWdhdGlvbicsXG4gICdfcGFnaW5hdGlvbicsXG4gICdwYXJhbGxheCcsXG4gICdfc2Nyb2xsYmFyJyxcbiAgJ190aHVtYnMnLFxuICAndmlydHVhbCcsXG4gICd6b29tJyxcbiAgJ29uJyxcbl07XG4iXX0=